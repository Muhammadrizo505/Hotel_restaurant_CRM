# Generated by Django 4.2.6 on 2023-12-25 20:18

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone_number', models.CharField(blank=True, max_length=13, null=True, unique=True, validators=[django.core.validators.RegexValidator(code='Invalid number', message='Invalide phone number', regex='^[\\+]9{2}8{1}[0-9]{9}$')])),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'swappable': 'AUTH_USER_MODEL',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=55, verbose_name='Manzil')),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=155)),
            ],
        ),
        migrations.CreateModel(
            name='Git',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=55)),
                ('last_name', models.CharField(max_length=55)),
                ('phone_number', models.CharField(blank=True, max_length=13, null=True, unique=True, validators=[django.core.validators.RegexValidator(code='Invalid number', message='Invalide phone number', regex='^[\\+]9{2}8{1}[0-9]{9}$')], verbose_name='Telefon_raqam')),
                ('img', models.ImageField(upload_to='git_img/')),
            ],
        ),
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=55, verbose_name='Taom_nomi')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Narxi')),
                ('img', models.ImageField(blank=True, null=True, upload_to='menu_img/', verbose_name='Rasmi')),
                ('catagory', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.category', verbose_name='Turi')),
            ],
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('noun', models.IntegerField(default=1, unique=True, verbose_name='Raqami')),
                ('floor', models.IntegerField(default=1, verbose_name='Qavati')),
            ],
        ),
        migrations.CreateModel(
            name='SubCategoryLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=55)),
            ],
        ),
        migrations.CreateModel(
            name='Table_number',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name='Workplace',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=155, verbose_name='Ish_joyi')),
                ('adress', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.address', verbose_name='Manzil')),
            ],
        ),
        migrations.CreateModel(
            name='Restorant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=55)),
                ('restorant_bamk_number', models.PositiveIntegerField(blank=True, null=True)),
                ('description', models.TextField()),
                ('call_centre', models.CharField(blank=True, max_length=13, null=True, unique=True, validators=[django.core.validators.RegexValidator(code='Invalid number', message='Invalide phone number', regex='^[\\+]9{2}8{1}[0-9]{9}$')], verbose_name='Telefon_raqam')),
                ('category_location', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.address')),
                ('sub_category_location', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.subcategorylocation')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('problem', models.CharField(max_length=255, verbose_name='Muammo_sababi')),
                ('slug', models.SlugField(blank=True, max_length=55, null=True, unique=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('work_place', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.workplace', verbose_name='Ish_joyi')),
            ],
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.FloatField(default=0, verbose_name='Baholang')),
                ('work_place', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.workplace', verbose_name='Ish_joyi')),
            ],
        ),
        migrations.CreateModel(
            name='OrderTable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=55, verbose_name='Ismingiz')),
                ('last_name', models.CharField(max_length=55, verbose_name='Familyangiz')),
                ('phone_number', models.CharField(blank=True, max_length=13, null=True, unique=True, validators=[django.core.validators.RegexValidator(code='Invalid number', message='Invalide phone number', regex='^[\\+]9{2}8{1}[0-9]{9}$')], verbose_name='Telefon_raqam')),
                ('qr_code', models.ImageField(blank=True, null=True, upload_to='qr_codes/')),
                ('food', models.ManyToManyField(blank=True, to='main.menu', verbose_name='Taom_nomi')),
                ('table_number', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.table_number', verbose_name='Stol_raqami')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=55, verbose_name='Ismingiz')),
                ('last_name', models.CharField(max_length=55, verbose_name='Familyangiz')),
                ('slug', models.SlugField(blank=True, max_length=55, null=True, unique=True)),
                ('qr_code', models.ImageField(blank=True, null=True, upload_to='qr_codes/')),
                ('food', models.ManyToManyField(to='main.menu', verbose_name='Taom_Tanlang')),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.room', verbose_name='Xonangiz')),
            ],
        ),
        migrations.CreateModel(
            name='Hotel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('hotel_bank_number', models.PositiveIntegerField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('call_centre', models.CharField(blank=True, max_length=13, null=True, unique=True, validators=[django.core.validators.RegexValidator(code='Invalid number', message='Invalide phone number', regex='^[\\+]9{2}8{1}[0-9]{9}$')], verbose_name='Telefon_raqam')),
                ('number_rooms', models.IntegerField(default=0)),
                ('amenities', models.TextField()),
                ('img', models.ImageField(upload_to='Hotel_img/')),
                ('category_location', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.address')),
                ('git', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.git')),
                ('sub_category_location', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.subcategorylocation')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FoodOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=55, verbose_name='Ismingiz')),
                ('last_name', models.CharField(max_length=55, verbose_name='Familyangiz')),
                ('is_deliver', models.BooleanField(default=False, verbose_name='Yetkazib_berish_kerakmi')),
                ('phone_number', models.CharField(blank=True, max_length=13, null=True, unique=True, validators=[django.core.validators.RegexValidator(code='Invalid number', message='Invalide phone number', regex='^[\\+]9{2}8{1}[0-9]{9}$')], verbose_name='Telefon_raqam')),
                ('extra_phone_number', models.CharField(blank=True, max_length=13, null=True, unique=True, validators=[django.core.validators.RegexValidator(code='Invalid number', message='Invalide phone number', regex='^[\\+]9{2}8{1}[0-9]{9}$')], verbose_name='Telefon_raqam')),
                ('payment_type', models.CharField(choices=[('Karta', 'Karta'), ('Naqd pul', 'Naqd pul')], max_length=55)),
                ('slug', models.SlugField(blank=True, max_length=55, null=True, unique=True)),
                ('qr_code', models.ImageField(blank=True, null=True, upload_to='qr_codes/')),
                ('food', models.ManyToManyField(to='main.menu', verbose_name='Taom_nomi')),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=55, verbose_name='Ismingiz')),
                ('last_name', models.CharField(max_length=55, verbose_name='Familyangiz')),
                ('phone_number', models.CharField(blank=True, max_length=13, null=True, unique=True, validators=[django.core.validators.RegexValidator(code='Invalid number', message='Invalide phone number', regex='^[\\+]9{2}8{1}[0-9]{9}$')], verbose_name='Telefon_raqam')),
                ('salary', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Oyligiz')),
                ('age', models.IntegerField(default=15, verbose_name='Yoshingiz')),
                ('start_work_time', models.TimeField()),
                ('end_work_time', models.TimeField()),
                ('rating', models.FloatField(default=0)),
                ('slug', models.SlugField(blank=True, max_length=55, null=True, unique=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('workplace', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.workplace', verbose_name='Ish_joyingiz')),
            ],
        ),
    ]
